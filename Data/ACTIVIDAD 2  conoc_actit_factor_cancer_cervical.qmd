---
title: "Cancer Cervical"
format: html
editor: visual
---

GRUPO 06

Choquecahua Bendezú Carol Neyduth

Clemente Valenzuela Brithney Coraima

Cortez Carbonell Dariana Ysabel

Felix Yataco Maria Fernanda

Huaripuma Lozano Anyelina Yuli

Larico Mamani Liz Heydi Patricia

## Instalar paquetes

```{r}
 install.packages("tidyverse")
 install.packages("rio")
 install.packages("here")
 install.packages("janitor")
 install.packages("skimr")
 install.packages("visdat")
 install.packages("DataExplorer")
```

## Cargar paquetes

```{r}
library(rio)
library(here)
library(janitor)
library(skimr)
library(visdat)
library(DataExplorer)
library(ggplot2)
```

## Importando conoc_actit_factor_cancer_cervical.csv usando el paquete rio

```{r}
conoc_actit_factor_cancer_cervical = import(here("data", "conoc_actit_factor_cancer_cervical.csv"))
```

## Vistazo al contenido

### ¿Cuántas variables y observaciones hay?

El primer número indica el número de filas, el segundo, el número de columnas.

```{r}
dim(conoc_actit_factor_cancer_cervical)
```

### ¿Cuantas y qué tipos de variables hay?

```{r}
str(conoc_actit_factor_cancer_cervical)
```

Una función similar

```{r}
dplyr::glimpse(conoc_actit_factor_cancer_cervical)
```

Estadísticos descriptivos y otros parámetros para exploración de datos

```{r}
skimr::skim(conoc_actit_factor_cancer_cervical)
```

Resumen por variable

```{r}
summary(conoc_actit_factor_cancer_cervical)
```

### Visualmente

```{r}
View(conoc_actit_factor_cancer_cervical)
```

```{r}
visdat::vis_dat(conoc_actit_factor_cancer_cervical)
```

```{r}
DataExplorer::create_report(conoc_actit_factor_cancer_cervical)
```

# Limpieza de datos

## Paso uno: corregir los nombres de variables.

Clean names es una función del paquete janitor

```{r}
conoc_actit_factor_cancer_cervical_1 = clean_names(conoc_actit_factor_cancer_cervical)
```

Nota el constraste (la función `names()` imprime los nombres de columnas de un *dataset*)

```{r}
names(conoc_actit_factor_cancer_cervical)
```

```{r}
names(conoc_actit_factor_cancer_cervical_1)
```

## Paso dos: convertir celdas vacías a NA

```{r}
conoc_actit_factor_cancer_cervical_2 = mutate_if(conoc_actit_factor_cancer_cervical_1, is.character, list(~na_if(.,"")))
```

## Paso tres: eliminar columnas o filas vacias.

```{r}
conoc_actit_factor_cancer_cervical_3 = remove_empty(conoc_actit_factor_cancer_cervical_2, which = c("rows", "cols"))
```

## Optimizando el código

### Corregir nombres, celdas vacías a NA y eliminar columnas o filas vacías.

```{r}
conoc_actit_factor_cancer_cervical_1 = conoc_actit_factor_cancer_cervical |> 
  clean_names() |> 
  mutate_if(is.character, list(~ na_if(., ""))) |> 
  remove_empty(which = c("rows", "cols"))
```

## Paso 4: corregir errores ortográficos o valores inválidos

### Inspección tabular

```{r}
conoc_actit_factor_cancer_cervical_1 |> count(procedencia) # Cambia de variable categórica
```

```{r}
conoc_actit_factor_cancer_cervical_1 |> count(n_educacion) # Cambia de variable categórica
```

```{r}
conoc_actit_factor_cancer_cervical_1 |> count(etnia) # Cambia de variable categórica
```

Transformando de data.frame a as tibble

```{r}
conoc_actit_factor_cancer_cervical_2 = as_tibble(conoc_actit_factor_cancer_cervical_1)
```

Corregir errores ortográficos usando `mutate()` y `case_when()`

```{r}
  conoc_actit_factor_cancer_cervical_3 = conoc_actit_factor_cancer_cervical_2 |>
  mutate(e_marital = case_when(
    e_marital == "casada" ~ "Casada" ,
    e_marital == "soltera" ~ "Soltera" ,
    e_marital == "conviviente" ~ "Conviviente",
    e_marital == "viuda" ~ "Viuda" ,
   TRUE ~ e_marital))

```

```{r}
conoc_actit_factor_cancer_cervical_3 = conoc_actit_factor_cancer_cervical_2 |>
  mutate(religion = case_when(
    religion == "catolico" ~ "Catolico",
    religion == "catolico" ~ "católico",
    religion == "ninguna" ~ "Ninguna",
    religion == "evangelista" ~ "Evangelista",
    TRUE ~ religion))
```

## Paso 5: Colapsar una variable categórica en menos niveles

Un vistazo a la variable de interés

```{r}
conoc_actit_factor_cancer_cervical_3 |> count(conocimiento)
```

Colapsar a dos categorías

```{r}
library(dplyr)

conoc_actit_factor_cancer_cervical_4 = conoc_actit_factor_cancer_cervical_3 |> 
  mutate(conocimiento_2 = case_when(
    conocimiento %in% c("no conoce") ~ "no tiene",
    conocimiento %in% c("bajo", "medio", "alto") ~ "si tiene",
    TRUE ~ conocimiento)
    )


```

Comprobando el cambio

```{r}
conoc_actit_factor_cancer_cervical_4 |> count(conocimiento_2)
```

## Paso 6: Transformar una variable

Transformación a logaritmo

```{r}
summary(conoc_actit_factor_cancer_cervical_4$num_hijos)
```

```{r}
hist(conoc_actit_factor_cancer_cervical_4$num_hijos)
```

```{r}
conoc_actit_factor_cancer_cervical_5 <- conoc_actit_factor_cancer_cervical_4 |>  
  mutate(num_hijos = (log(num_hijos + 1)))
```

```{r}
conoc_actit_factor_cancer_cervical_5 |>  
  ggplot(aes(x = num_hijos)) +
  geom_histogram(bins = 10) +
  labs(y = "Frecuencia", x = "log(num_hijos + 1)")
```

Transformación a binario

```{r}
conoc_actit_factor_cancer_cervical_6 = conoc_actit_factor_cancer_cervical_5 |>
  mutate(
    parejas_sex_c = case_when(
      parejas_sex <  10 ~ "< 10",
      parejas_sex >= 10 ~ ">= 10"
    )
  ) |>
  mutate(parejas_sex_c = factor(parejas_sex, levels = "< 10", ">= 10"))
```

Transformando valores a valores perdidos usando la función `na_if()`

```{r}
conoc_actit_factor_cancer_cervical_7 = conoc_actit_factor_cancer_cervical_6 |> 
  mutate(parejas_sex = na_if(parejas_sex, -7))
```

Transformando valores a valores perdidos usando la función `case_when()`

```{r}
conoc_actit_factor_cancer_cervical_7 = conoc_actit_factor_cancer_cervical_6 |> 
  mutate(edad = case_when(edad %in% c(3, 999) ~ NA,
                            TRUE ~ edad))
```

## Paso 7: Renombrar una variable

Imprimir los nombres. ¿Cuáles necesitan cambio?

```{r}
names(conoc_actit_factor_cancer_cervical_7)
```

Cambiando un nombre de variables

```{r}
conoc_actit_factor_cancer_cervical_8 <- conoc_actit_factor_cancer_cervical_7 |>  
  rename(Número_de_paciente = paciente_num)
```

Varios a la vez

```{r}
conoc_actit_factor_cancer_cervical_8 <- conoc_actit_factor_cancer_cervical_7 |>  
  rename(Número_de_paciente = paciente_num,
         Edad = edad,
         Estado_marital = e_marital,
         Nivel_de_educación = n_educacion,
         Procedencia = procedencia ,
         Antecedentes_fam = antec_fam,
         Número_de_paciente = paciente_num,
         Conocimiento = conocimiento,
         Conocimiento_2 = conocimiento_2,
         Religión = religion,
         Ocupación = ocupacion,
         Edad_relacion_sexual = edad_relacion_sexual,
         Método_anticoceptivo = met_anticoncep,
         Actitud = actitud,
         Parejas_sex_c = parejas_sex_c,
         Etnia = etnia,
         Ocupación_convi = ocupacion_convi,
         Parejas_sex = parejas_sex,
         Antecedentes_ets = antec_ets,
         Practica = practica)

```

Comprobando

```{r}
names(conoc_actit_factor_cancer_cervical_8)
```
